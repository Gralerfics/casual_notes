<launch>
    <!-- Simulation -->
    <!--     DiffDriveController -->
    <group ns="turtlebot3">
        <rosparam>
            turtlebot_diff_drive_controller:
                type: "diff_drive_controller/DiffDriveController"
                left_wheel: ['left wheel motor']
                right_wheel: ['right wheel motor']
                pose_covariance_diagonal: [0.001, 0.001, 1000000.0, 1000000.0, 1000000.0, 0.03]
                twist_covariance_diagonal: [0.001, 0.001, 1000000.0, 1000000.0, 1000000.0, 0.03]
        </rosparam>
		<node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="turtlebot_diff_drive_controller" />
	</group>
    
    <!--     Start Webots -->
    <arg name="no_gui" default="false" doc="Start Webots with minimal GUI" />
    <include file="$(find webots_ros)/launch/webots.launch">
        <arg name="mode" value="realtime" />
        <arg name="no_gui" value="$(arg no_gui)" />
        <arg name="world" value="$(find teach_repeat)/worlds/test_wbt_world.wbt" />
    </include>

    <!--     Robot State Publisher -->
    <node pkg="robot_state_publisher" type="robot_state_publisher" name="turtlebot3_state_publisher" respawn="true" respawn_delay="5">
        <remap from="robot_description" to="/turtlebot3/robot_description" />
    </node>

    <!-- Global params -->
	<rosparam param="image_resize_width">100</rosparam>
	<rosparam param="image_resize_height">50</rosparam>
    <rosparam param="patch_size">(9,9)</rosparam>
    <rosparam param="save_gt_data">true</rosparam>

    <!-- Collect image data -->
    <node pkg="teach_repeat" type="data_collect.py" name="data_collect" output="screen">
        <remap from="odom" to="/turtlebot3/turtlebot_diff_drive_controller/odom" />
        <remap from="image" to="/turtlebot3/camera/image" />
        <rosparam param="distance_threshold">0.2</rosparam>
        <rosparam param="angle_threshold_deg">10.0</rosparam>
    </node>

    <!-- Save Images and pose in a directory -->
    <node pkg="teach_repeat" type="data_save.py" name="data_save" output="screen">
        <rosparam param="save_dir">~/tmp/teach-repeat-data/</rosparam>
        <rosparam param="timestamp_folder">true</rosparam>
    </node>
</launch>
